package com.easybook.main;
import ca.senecacollege.prg556.limara.bean.*;

import ca.on.senecac.prg556.common.*;

import java.io.IOException;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;

import javax.servlet.Filter;
import javax.servlet.FilterChain;
import javax.servlet.FilterConfig;
import javax.servlet.ServletException;
import javax.servlet.ServletRequest;
import javax.servlet.ServletResponse;
import javax.servlet.annotation.WebFilter;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;

import com.easybook.main.data.MaterialDAOFactory;

/**
 * Servlet Filter implementation class ReserveMaterialsFilter
 */
//Filter specified in web.xml
//@WebFilter("/ReserveMaterialsFilter")
public class ReserveMaterialsFilter implements Filter {

    /**
     * Default constructor. 
     */
    public ReserveMaterialsFilter() {

    }

	/**
	 * @see Filter#destroy()
	 */
	public void destroy() {

	}

	/**
	 * @see Filter#doFilter(ServletRequest, ServletResponse, FilterChain)
	 */
	public void doFilter(ServletRequest request, ServletResponse response, FilterChain chain) throws IOException, ServletException {
		HttpServletRequest req = (HttpServletRequest)request; // cast from ServletRequest back to HttpServletRequest
		
		String matName = "", matType = "", id = "";
		if ("POST".equals(req.getMethod()))
		{
			// if there is anything in matSelect, process it with xmlEscape and save it back as a request-scoped attribute
			if (request.getParameter("matSelect") != null) {
				matType = request.getParameter("matSelect");
				request.setAttribute("matSel", StringHelper.xmlEscape(matType));
			}
			// if there is anything in materialName, process it with xmlEscape and save it back as a request-scoped attribute
			if (request.getParameter("materialName") != null) {
				matName = request.getParameter("materialName");
				request.setAttribute("matName", StringHelper.xmlEscape(matName));
			}
			else {
				// If the type is all and the title is empty, the method should send a request attribute (to be used by reservematerials.jspx) indicating that an invalid empty title was specified.
				if (matType == "all") {
					request.setAttribute("AllAndEmpty", true);
				}
			}				
		}
		
		id = request.getParameter("id");
		 Material baseMat = new Material(id, matName, matSel);
		try {
			List<Material> matList = MaterialDAOFactory.getMaterialDAO().getAvailableMaterials(matName, matType);
		}
		catch (SQLException e) {
			throw new BadRequestException(e);
		}

		// fill matList with getAvailableMaterials()
		
		// pass the request along the filter chain
		chain.doFilter(request, response);
	}

	/**
	 * @see Filter#init(FilterConfig)
	 */
	public void init(FilterConfig fConfig) throws ServletException {

	}

}
